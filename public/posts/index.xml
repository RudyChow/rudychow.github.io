<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Rudy&#39;s blog</title>
    <link>http://127.0.0.1:1313/posts/</link>
    <description>Recent content in Posts on Rudy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    
	<atom:link href="http://127.0.0.1:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>http://127.0.0.1:1313/posts/select/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://127.0.0.1:1313/posts/select/</guid>
      <description># define __FD_ZERO(set) \ do { \ unsigned int __i; \ fd_set *__arr = (set); \ for (__i = 0; __i &amp;lt; sizeof (fd_set) / sizeof (__fd_mask); ++__i) \ __FDS_BITS (__arr)[__i] = 0; \ } while (0)  #define __FD_SET(d, set) \ ((void) (__FDS_BITS (set)[__FD_ELT (d)] |= __FD_MASK (d)))  #define __FD_CLR(d, set) \ ((void) (__FDS_BITS (set)[__FD_ELT (d)] &amp;amp;= ~__FD_MASK (d)))  #define __FD_ISSET(d, set) \ ((__FDS_BITS (set)[__FD_ELT (d)] &amp;amp; __FD_MASK (d)) != 0)  #define __NFDBITS (8 * (int) sizeof (__fd_mask)) #define __FD_ELT(d) ((d) / __NFDBITS) #define __FD_MASK(d) ((__fd_mask) (1UL &amp;lt;&amp;lt; ((d) % __NFDBITS)))  typedef struct { /* XPG4.2 requires this member name. Otherwise avoid the name from the global namespace. */ #ifdef __USE_XOPEN  __fd_mask fds_bits[__FD_SETSIZE / __NFDBITS]; # define __FDS_BITS(set) ((set)-&amp;gt;fds_bits) #else  __fd_mask __fds_bits[__FD_SETSIZE / __NFDBITS]; # define __FDS_BITS(set) ((set)-&amp;gt;__fds_bits) #endif  } fd_set; #define FD_SETSIZE __FD_SETSIZE typedef __fd_mask fd_mask; typedef long int __fd_mask; #define __FD_SETSIZE 1024 typedef struct{// 64long int __fds_bits[16];// 32long int __fds_bits[32];} fd_set;__FD_SETfd_set.</description>
    </item>
    
  </channel>
</rss>